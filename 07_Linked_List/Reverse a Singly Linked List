#include <iostream>
using namespace std;

class Node
{
public:
int data;
Node *next;
};

class LinkedList
{
private:
Node *head;

public:
LinkedList()
{
head = NULL;
}

void insertAtEnd(int value)
{
    Node *newnode = new Node();
    newnode->data = value;
    newnode->next = NULL;

    if (head == NULL)
    {
        head = newnode;
        return;
    }

    Node *temp = head;
    while (temp->next != NULL)
    {
        temp = temp->next;
    }
    temp->next = newnode;
}

void reverseList()
{
    if (head == NULL)
    {
        cout << "List is empty!" << endl;
        return;
    }

    Node *prev = NULL;
    Node *curr = head;
    Node *next = NULL;

    while (curr != NULL)
    {
        next = curr->next;   // store next node
        curr->next = prev;   // reverse link
        prev = curr;         // move prev one step
        curr = next;         // move curr one step
    }

    head = prev;
    cout << "List reversed successfully!" << endl;
}

void display()
{
    if (head == NULL)
    {
        cout << "List is empty!" << endl;
        return;
    }

    Node *temp = head;
    cout << "Linked List: ";
    while (temp != NULL)
    {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

};

int main()
{
LinkedList list;

list.insertAtEnd(10);
list.insertAtEnd(20);
list.insertAtEnd(30);
list.insertAtEnd(40);

cout << "Original List:" << endl;
list.display();

list.reverseList();

cout << "Reversed List:" << endl;
list.display();

return 0;
}
