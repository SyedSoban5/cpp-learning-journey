#include <iostream>
using namespace std;

class Node
{
public:
int data;
Node *next;
};

class LinkedList
{
private:
Node *head;

public:
LinkedList()
{
head = NULL;
}
void insertAtEnd(int value)
{
    Node *newnode = new Node();
    newnode->data = value;
    newnode->next = NULL;

    if (head == NULL)
    {
        head = newnode;
        return;
    }

    Node *temp = head;
    while (temp->next != NULL)
    {
        temp = temp->next;
    }
    temp->next = newnode;
}

void findMinMax()
{
    if (head == NULL)
    {
        cout << "List is empty!" << endl;
        return;
    }

    Node *temp = head;
    int min = head->data;
    int max = head->data;

    while (temp != NULL)
    {
        if (temp->data < min)
            min = temp->data;

        if (temp->data > max)
            max = temp->data;

        temp = temp->next;
    }

    cout << "Minimum value in list: " << min << endl;
    cout << "Maximum value in list: " << max << endl;
}

void display()
{
    if (head == NULL)
    {
        cout << "List is empty!" << endl;
        return;
    }

    Node *temp = head;
    cout << "Linked List: ";
    while (temp != NULL)
    {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}
};

int main()
{
LinkedList list;

list.insertAtEnd(10);
list.insertAtEnd(5);
list.insertAtEnd(25);
list.insertAtEnd(15);
list.insertAtEnd(30);

list.display();
list.findMinMax();

return 0;
}
